{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/chat.service.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\r\\n    color: firebrick;\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\nbody {  \\r\\n    background-image: url('background.jpg');\\r\\n    background-repeat: repeat-x;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEI7QUFDSjs7QUFFQTtJQUNJLHVDQUFpRDtJQUNqRCwyQkFBMkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuICAgIGNvbG9yOiBmaXJlYnJpY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG5cclxuYm9keSB7ICBcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"width:1000px; margin:0 auto;\\\" class = \\\"body\\\">\\n  <div class=\\\"h1\\\" >\\n      <h1>{{title}}</h1>\\n      <hr>\\n  </div>\\n  <div>\\n      <div class=\\\"col-sm-5\\\">\\n          <div class=\\\"form-group\\\">\\n              <strong class = \\\"h3\\\"> \\n                  <label for=\\\"username\\\">{{userName}}</label>\\n              </strong>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"user\\\" *ngIf = \\\"visible\\\"  class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Enter username\\\">\\n              <!-- <small id=\\\"userHelp\\\" class=\\\"form-text text-muted\\\">Type your username.</small> -->\\n          </div>\\n      </div>\\n      <div class=\\\"col-sm-5\\\" *ngIf = \\\"visible\\\">\\n          <select name=\\\"roomInput\\\" id=\\\"roomInput\\\" placeholder=\\\"Enter username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"room\\\">\\n              <option value=\\\"Lobby\\\">Lobby</option>\\n              <option value=\\\"Hall\\\">Hall</option>\\n              <option value=\\\"Deluxe\\\">Deluxe</option>\\n          </select>\\n      </div>\\n      <div class=\\\"col col-sm-2\\\">\\n          <div style=\\\"margin-top:19px;\\\" class=\\\"pull-right\\\"> \\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf = \\\"visible\\\" (click)=\\\"join()\\\">Join</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-default pull-right\\\" [disabled] = 'visible' (click)=\\\"leave()\\\">Leave</button>\\n          </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"well\\\" style=\\\"height:200px; padding:15px;\\\">\\n          <div *ngFor=\\\"let item of messageArray\\\">\\n          <span><strong>{{item.user}} : </strong> {{item.message}}</span>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"messageText\\\">            \\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" [disabled] = 'visible' (click)=\\\"sendMessage()\\\">Send</button>\\n      </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport {ChatService} from '../services/chat.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [ChatService]\n})\nexport class AppComponent {\n\n    user: String;\n    room: String;\n    title: String = 'Realtime Messenger';\n    background_img = '../images/background.jpg';\n    userName: String = 'User Name';\n    visible: Boolean = true;\n    messageText: String;\n    messageArray: Array<{user: String, message: String}> = [];\n    constructor(private _chatService: ChatService) {\n        this._chatService.newUserJoined()\n        .subscribe(data => {\n            this.messageArray.push(data);\n        });\n\n\n        this._chatService.userLeftRoom()\n        .subscribe(data => {\n            this.visible = true;\n            this.messageArray.push(data);\n        });\n\n        this._chatService.newMessageReceived()\n        .subscribe(data => this.messageArray.push(data));\n    }\n\n    join() {\n        this.visible = false;\n        this.title = this.room;\n        this.userName = this.user;\n        this._chatService.joinRoom({user: this.user, room: this.room});\n    }\n\n    leave() {\n        this.visible = true;\n        this._chatService.leaveRoom({user: this.user, room: this.room});\n        this.user = '';\n        this.userName = 'User Name';\n        this.title = 'Realtime Messenger';\n        this.room = '';\n        this.messageArray = [];\n    }\n\n    sendMessage() {\n        this._chatService.sendMessage({user: this.user, room: this.room, message: this.messageText});\n        this.messageText = '';\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\n\r\n\r\nexport class ChatService {\r\n\r\n    private socket = io('https://13.233.237.92:3000');\r\n\r\n    joinRoom(data) {\r\n        console.log(this.socket);\r\n        this.socket.emit('join', data);\r\n    }\r\n\r\n    newUserJoined() {\r\n        const observable = new Observable<{user: String, message: String}>(observer => {\r\n            this.socket.on('New User connected', (data) => {\r\n                console.log(data);\r\n                observer.next(data);\r\n            });\r\n            return () => {\r\n                this.socket.disconnect();\r\n            };\r\n        });\r\n\r\n        return observable;\r\n    }\r\n\r\n    leaveRoom(data) {\r\n        this.socket.emit('leave', data);\r\n    }\r\n\r\n    userLeftRoom() {\r\n        const observable = new Observable<{user: String, message: String}>(observer => {\r\n            this.socket.on('left room', (data) => {\r\n                observer.next(data);\r\n            });\r\n            return () => {this.socket.disconnect(); };\r\n        });\r\n\r\n        return observable;\r\n    }\r\n\r\n    sendMessage(data) {\r\n        this.socket.emit('message', data);\r\n    }\r\n\r\n    newMessageReceived() {\r\n        const observable = new Observable<{user: String, message: String}>(observer => {\r\n            this.socket.on('new message', (data) => {\r\n                observer.next(data);\r\n            });\r\n            return () => {this.socket.disconnect(); };\r\n        });\r\n\r\n        return observable;\r\n    }\r\n}\r\n","/* (ignored) */"],"sourceRoot":""}